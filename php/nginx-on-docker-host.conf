# To Use:
# 1. copy into your /etc/nginx/sites-available directory
# sudo cp nginx-ondocker-host.conf /etc/nginx/sites-available/mautic-docker
# 2. edit this file to replace the [variables] below, specifically
# [your domain] and [path to the local instance of your Mautic files, as listed in your Docker volume configuration]
# I usually use vim as the editor (hit ESC+: and then wq to save-and-exit)
# sudo vim /etc/nginx/sites-available/mautic-docker
# or use nano
# sudo nano /etc/nginx/sites-available/mautic-docker
# 3. link into sites-enabled
# sudo ln -sf /etc/nginx/sites-available/mautic-docker /etc/nginx/sites-enabled
# 4. check that nginx is happy with the configuration
# sudo nginx -t
# 5. if it's ok, reload your nginx configuration
# sudo service nginx reload
# 6. go to [your domain] in your browser.
#
# some details from https://www.mautic.org/community/index.php/2680-installation-with-nginx/0
# and see https://gist.github.com/that0n3guy/905c812c0f65e7ffb5ec#file-gistfile1-txt-L44
#
server {
    # add [IP-Address:]80 in the next line if you want to limit this to a single interface
    listen 80;
    server_name [your domain];

#    # To enable SSL *after* you have created your Let's Encrypt certificates, remove these comment #s.
#
#    root /var/www/html;
#
#    # for let's encrypt renewals!
#    location /.well-known {
#        default_type text/plain;
#    }
#
#    # redirect all HTTP traffic to HTTPS.
#    location / {
#    	return	302 https://[your domain]$request_uri;
#    }
#}
#
## This configuration assumes that there's an nginx container talking to the mautic PHP-fpm container,
## and this is a reverse proxy for that Mautic instance.
#server {
#    # add [IP-Address:]443 in the next line if you want to limit this to a single interface
#    listen 443 ssl;
#    ssl on;
#    ssl_certificate /etc/letsencrypt/live/[your domain]/fullchain.pem;
#    ssl_certificate_key /etc/letsencrypt/live/[your domain]/privkey.pem;
#    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#    # to create this, see https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
#    ssl_dhparam /etc/ssl/certs/dhparam.pem;
#
#    keepalive_timeout 20s;
#
#    server_name [your domain];

    # default path to Mautic - from the point of view of the docker container
    root /var/www/html;
    index index.php index.html index.htm;

    # for let's encrypt renewals!
    location /.well-known {
        default_type text/plain;
    }

    # redirect index.php to root
    rewrite ^/index.php/(.*) /$1  permanent;

    # redirect some entire folders
    rewrite ^/(vendor|translations|build)/.* /index.php break;

    # everything else goes through here!
    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to index.html
        # the path is from perspective of PHP-FPM container
        try_files $uri /index.php$is_args$args;
    }

    #
    # Get static assets... path from perspective of Docker host!!
    #
    # allow access to assets like js, css, or images
    location ~* /(.*)\.(?:js|css|jpg|png|gif|ps)$ {
        # path to assets from nginx perspective
        root [path to the local instance of your Mautic files, as listed in your Docker volume configuration];
        allow all;
    }

    # allow access to Assets folder in bundles
    location ~ /app/bundles/.*/Assets/ {
        # path to assets from nginx perspective
     	root [path to the local instance of your Mautic files, as listed in your Docker volume configuration];
        allow all;
    }

    # Deny everything else in /app folder except Assets folder in bundles
    location ~ /app/ { deny all; }
    #
    # end static assets

    # Deny everything else in /addons or /plugins folder except Assets folder in bundles
    location ~ /(addons|plugins)/.*/Assets/ {
        allow all;
        access_log off;
    }
    location ~ /(addons|plugins)/ {
        deny all;
    }

    # Deny all php files in themes folder
    location ~* ^/themes/(.*)\.php {
        deny all;
    }

    # Don't log favicon
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    # Don't log robots
    location = /robots.txt  {
        access_log off;
        log_not_found off;
    }

    # Deny yml, twig, markdown, init file access
    location ~* /(.*)\.(?:markdown|md|twig|yaml|yml|ht|htaccess|ini)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny all attempts to access hidden files/folders such as .htaccess, .htpasswd, .DS_Store (Mac), etc...
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny all grunt, composer files
    location ~* (Gruntfile|package|composer)\.(js|json)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ \.php$ {
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_keep_conn on;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }
    client_max_body_size 1G;
}
